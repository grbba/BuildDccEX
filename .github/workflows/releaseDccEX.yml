name: Release DccEX Avrdude 

on:
  push:
    branches: 
       - main
    #  - release
    #tags: 
    #  - 'v*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  release_assets:
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [Mega, Uno, Nano, NanoEvery, UnoWifiR2]
    steps:
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          workflow: get_avrdude.yml
          name: Avr_Arduino${{matrix.board}}
          path: /home/runner/work/BuildDccEX/Arduino${{matrix.board}}
        # Optional, defaults to current repo
          repo: ${{github.repository}} 
      - name: See what we have 2
        run: |
          ls -la /home/runner/work/BuildDccEX
      - name: Package release artifact
        run: |
          cd /home/runner/work/BuildDccEX
          ls -la Arduino${{matrix.board}}
          zip -r Arduino${{matrix.board}} Arduino${{matrix.board}}/*
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /home/runner/work/BuildDccEX/Arduino${{matrix.board}}.zip
          asset_name: Arduino${{matrix.board}}.zip
          asset_content_type: application/zip
         
